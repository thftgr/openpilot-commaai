#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7459114665916083270) {
   out_7459114665916083270[0] = 0;
   out_7459114665916083270[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7459114665916083270[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7459114665916083270[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7459114665916083270[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7459114665916083270[5] = -sin(in_vec[1]);
   out_7459114665916083270[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7459114665916083270[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7459114665916083270[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7459114665916083270[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7459114665916083270[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7459114665916083270[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7459114665916083270[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7459114665916083270[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7459114665916083270[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7459114665916083270[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7459114665916083270[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7459114665916083270[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7132705503742969874) {
   out_7132705503742969874[0] = delta_x[0] + nom_x[0];
   out_7132705503742969874[1] = delta_x[1] + nom_x[1];
   out_7132705503742969874[2] = delta_x[2] + nom_x[2];
   out_7132705503742969874[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7132705503742969874[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7132705503742969874[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7132705503742969874[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7132705503742969874[7] = delta_x[6] + nom_x[7];
   out_7132705503742969874[8] = delta_x[7] + nom_x[8];
   out_7132705503742969874[9] = delta_x[8] + nom_x[9];
   out_7132705503742969874[10] = delta_x[9] + nom_x[10];
   out_7132705503742969874[11] = delta_x[10] + nom_x[11];
   out_7132705503742969874[12] = delta_x[11] + nom_x[12];
   out_7132705503742969874[13] = delta_x[12] + nom_x[13];
   out_7132705503742969874[14] = delta_x[13] + nom_x[14];
   out_7132705503742969874[15] = delta_x[14] + nom_x[15];
   out_7132705503742969874[16] = delta_x[15] + nom_x[16];
   out_7132705503742969874[17] = delta_x[16] + nom_x[17];
   out_7132705503742969874[18] = delta_x[17] + nom_x[18];
   out_7132705503742969874[19] = delta_x[18] + nom_x[19];
   out_7132705503742969874[20] = delta_x[19] + nom_x[20];
   out_7132705503742969874[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5508521473895153696) {
   out_5508521473895153696[0] = -nom_x[0] + true_x[0];
   out_5508521473895153696[1] = -nom_x[1] + true_x[1];
   out_5508521473895153696[2] = -nom_x[2] + true_x[2];
   out_5508521473895153696[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5508521473895153696[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5508521473895153696[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5508521473895153696[6] = -nom_x[7] + true_x[7];
   out_5508521473895153696[7] = -nom_x[8] + true_x[8];
   out_5508521473895153696[8] = -nom_x[9] + true_x[9];
   out_5508521473895153696[9] = -nom_x[10] + true_x[10];
   out_5508521473895153696[10] = -nom_x[11] + true_x[11];
   out_5508521473895153696[11] = -nom_x[12] + true_x[12];
   out_5508521473895153696[12] = -nom_x[13] + true_x[13];
   out_5508521473895153696[13] = -nom_x[14] + true_x[14];
   out_5508521473895153696[14] = -nom_x[15] + true_x[15];
   out_5508521473895153696[15] = -nom_x[16] + true_x[16];
   out_5508521473895153696[16] = -nom_x[17] + true_x[17];
   out_5508521473895153696[17] = -nom_x[18] + true_x[18];
   out_5508521473895153696[18] = -nom_x[19] + true_x[19];
   out_5508521473895153696[19] = -nom_x[20] + true_x[20];
   out_5508521473895153696[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_587104994641019900) {
   out_587104994641019900[0] = 1.0;
   out_587104994641019900[1] = 0;
   out_587104994641019900[2] = 0;
   out_587104994641019900[3] = 0;
   out_587104994641019900[4] = 0;
   out_587104994641019900[5] = 0;
   out_587104994641019900[6] = 0;
   out_587104994641019900[7] = 0;
   out_587104994641019900[8] = 0;
   out_587104994641019900[9] = 0;
   out_587104994641019900[10] = 0;
   out_587104994641019900[11] = 0;
   out_587104994641019900[12] = 0;
   out_587104994641019900[13] = 0;
   out_587104994641019900[14] = 0;
   out_587104994641019900[15] = 0;
   out_587104994641019900[16] = 0;
   out_587104994641019900[17] = 0;
   out_587104994641019900[18] = 0;
   out_587104994641019900[19] = 0;
   out_587104994641019900[20] = 0;
   out_587104994641019900[21] = 0;
   out_587104994641019900[22] = 1.0;
   out_587104994641019900[23] = 0;
   out_587104994641019900[24] = 0;
   out_587104994641019900[25] = 0;
   out_587104994641019900[26] = 0;
   out_587104994641019900[27] = 0;
   out_587104994641019900[28] = 0;
   out_587104994641019900[29] = 0;
   out_587104994641019900[30] = 0;
   out_587104994641019900[31] = 0;
   out_587104994641019900[32] = 0;
   out_587104994641019900[33] = 0;
   out_587104994641019900[34] = 0;
   out_587104994641019900[35] = 0;
   out_587104994641019900[36] = 0;
   out_587104994641019900[37] = 0;
   out_587104994641019900[38] = 0;
   out_587104994641019900[39] = 0;
   out_587104994641019900[40] = 0;
   out_587104994641019900[41] = 0;
   out_587104994641019900[42] = 0;
   out_587104994641019900[43] = 0;
   out_587104994641019900[44] = 1.0;
   out_587104994641019900[45] = 0;
   out_587104994641019900[46] = 0;
   out_587104994641019900[47] = 0;
   out_587104994641019900[48] = 0;
   out_587104994641019900[49] = 0;
   out_587104994641019900[50] = 0;
   out_587104994641019900[51] = 0;
   out_587104994641019900[52] = 0;
   out_587104994641019900[53] = 0;
   out_587104994641019900[54] = 0;
   out_587104994641019900[55] = 0;
   out_587104994641019900[56] = 0;
   out_587104994641019900[57] = 0;
   out_587104994641019900[58] = 0;
   out_587104994641019900[59] = 0;
   out_587104994641019900[60] = 0;
   out_587104994641019900[61] = 0;
   out_587104994641019900[62] = 0;
   out_587104994641019900[63] = 0;
   out_587104994641019900[64] = 0;
   out_587104994641019900[65] = 0;
   out_587104994641019900[66] = -0.5*state[4];
   out_587104994641019900[67] = -0.5*state[5];
   out_587104994641019900[68] = -0.5*state[6];
   out_587104994641019900[69] = 0;
   out_587104994641019900[70] = 0;
   out_587104994641019900[71] = 0;
   out_587104994641019900[72] = 0;
   out_587104994641019900[73] = 0;
   out_587104994641019900[74] = 0;
   out_587104994641019900[75] = 0;
   out_587104994641019900[76] = 0;
   out_587104994641019900[77] = 0;
   out_587104994641019900[78] = 0;
   out_587104994641019900[79] = 0;
   out_587104994641019900[80] = 0;
   out_587104994641019900[81] = 0;
   out_587104994641019900[82] = 0;
   out_587104994641019900[83] = 0;
   out_587104994641019900[84] = 0;
   out_587104994641019900[85] = 0;
   out_587104994641019900[86] = 0;
   out_587104994641019900[87] = 0.5*state[3];
   out_587104994641019900[88] = 0.5*state[6];
   out_587104994641019900[89] = -0.5*state[5];
   out_587104994641019900[90] = 0;
   out_587104994641019900[91] = 0;
   out_587104994641019900[92] = 0;
   out_587104994641019900[93] = 0;
   out_587104994641019900[94] = 0;
   out_587104994641019900[95] = 0;
   out_587104994641019900[96] = 0;
   out_587104994641019900[97] = 0;
   out_587104994641019900[98] = 0;
   out_587104994641019900[99] = 0;
   out_587104994641019900[100] = 0;
   out_587104994641019900[101] = 0;
   out_587104994641019900[102] = 0;
   out_587104994641019900[103] = 0;
   out_587104994641019900[104] = 0;
   out_587104994641019900[105] = 0;
   out_587104994641019900[106] = 0;
   out_587104994641019900[107] = 0;
   out_587104994641019900[108] = -0.5*state[6];
   out_587104994641019900[109] = 0.5*state[3];
   out_587104994641019900[110] = 0.5*state[4];
   out_587104994641019900[111] = 0;
   out_587104994641019900[112] = 0;
   out_587104994641019900[113] = 0;
   out_587104994641019900[114] = 0;
   out_587104994641019900[115] = 0;
   out_587104994641019900[116] = 0;
   out_587104994641019900[117] = 0;
   out_587104994641019900[118] = 0;
   out_587104994641019900[119] = 0;
   out_587104994641019900[120] = 0;
   out_587104994641019900[121] = 0;
   out_587104994641019900[122] = 0;
   out_587104994641019900[123] = 0;
   out_587104994641019900[124] = 0;
   out_587104994641019900[125] = 0;
   out_587104994641019900[126] = 0;
   out_587104994641019900[127] = 0;
   out_587104994641019900[128] = 0;
   out_587104994641019900[129] = 0.5*state[5];
   out_587104994641019900[130] = -0.5*state[4];
   out_587104994641019900[131] = 0.5*state[3];
   out_587104994641019900[132] = 0;
   out_587104994641019900[133] = 0;
   out_587104994641019900[134] = 0;
   out_587104994641019900[135] = 0;
   out_587104994641019900[136] = 0;
   out_587104994641019900[137] = 0;
   out_587104994641019900[138] = 0;
   out_587104994641019900[139] = 0;
   out_587104994641019900[140] = 0;
   out_587104994641019900[141] = 0;
   out_587104994641019900[142] = 0;
   out_587104994641019900[143] = 0;
   out_587104994641019900[144] = 0;
   out_587104994641019900[145] = 0;
   out_587104994641019900[146] = 0;
   out_587104994641019900[147] = 0;
   out_587104994641019900[148] = 0;
   out_587104994641019900[149] = 0;
   out_587104994641019900[150] = 0;
   out_587104994641019900[151] = 0;
   out_587104994641019900[152] = 0;
   out_587104994641019900[153] = 1.0;
   out_587104994641019900[154] = 0;
   out_587104994641019900[155] = 0;
   out_587104994641019900[156] = 0;
   out_587104994641019900[157] = 0;
   out_587104994641019900[158] = 0;
   out_587104994641019900[159] = 0;
   out_587104994641019900[160] = 0;
   out_587104994641019900[161] = 0;
   out_587104994641019900[162] = 0;
   out_587104994641019900[163] = 0;
   out_587104994641019900[164] = 0;
   out_587104994641019900[165] = 0;
   out_587104994641019900[166] = 0;
   out_587104994641019900[167] = 0;
   out_587104994641019900[168] = 0;
   out_587104994641019900[169] = 0;
   out_587104994641019900[170] = 0;
   out_587104994641019900[171] = 0;
   out_587104994641019900[172] = 0;
   out_587104994641019900[173] = 0;
   out_587104994641019900[174] = 0;
   out_587104994641019900[175] = 1.0;
   out_587104994641019900[176] = 0;
   out_587104994641019900[177] = 0;
   out_587104994641019900[178] = 0;
   out_587104994641019900[179] = 0;
   out_587104994641019900[180] = 0;
   out_587104994641019900[181] = 0;
   out_587104994641019900[182] = 0;
   out_587104994641019900[183] = 0;
   out_587104994641019900[184] = 0;
   out_587104994641019900[185] = 0;
   out_587104994641019900[186] = 0;
   out_587104994641019900[187] = 0;
   out_587104994641019900[188] = 0;
   out_587104994641019900[189] = 0;
   out_587104994641019900[190] = 0;
   out_587104994641019900[191] = 0;
   out_587104994641019900[192] = 0;
   out_587104994641019900[193] = 0;
   out_587104994641019900[194] = 0;
   out_587104994641019900[195] = 0;
   out_587104994641019900[196] = 0;
   out_587104994641019900[197] = 1.0;
   out_587104994641019900[198] = 0;
   out_587104994641019900[199] = 0;
   out_587104994641019900[200] = 0;
   out_587104994641019900[201] = 0;
   out_587104994641019900[202] = 0;
   out_587104994641019900[203] = 0;
   out_587104994641019900[204] = 0;
   out_587104994641019900[205] = 0;
   out_587104994641019900[206] = 0;
   out_587104994641019900[207] = 0;
   out_587104994641019900[208] = 0;
   out_587104994641019900[209] = 0;
   out_587104994641019900[210] = 0;
   out_587104994641019900[211] = 0;
   out_587104994641019900[212] = 0;
   out_587104994641019900[213] = 0;
   out_587104994641019900[214] = 0;
   out_587104994641019900[215] = 0;
   out_587104994641019900[216] = 0;
   out_587104994641019900[217] = 0;
   out_587104994641019900[218] = 0;
   out_587104994641019900[219] = 1.0;
   out_587104994641019900[220] = 0;
   out_587104994641019900[221] = 0;
   out_587104994641019900[222] = 0;
   out_587104994641019900[223] = 0;
   out_587104994641019900[224] = 0;
   out_587104994641019900[225] = 0;
   out_587104994641019900[226] = 0;
   out_587104994641019900[227] = 0;
   out_587104994641019900[228] = 0;
   out_587104994641019900[229] = 0;
   out_587104994641019900[230] = 0;
   out_587104994641019900[231] = 0;
   out_587104994641019900[232] = 0;
   out_587104994641019900[233] = 0;
   out_587104994641019900[234] = 0;
   out_587104994641019900[235] = 0;
   out_587104994641019900[236] = 0;
   out_587104994641019900[237] = 0;
   out_587104994641019900[238] = 0;
   out_587104994641019900[239] = 0;
   out_587104994641019900[240] = 0;
   out_587104994641019900[241] = 1.0;
   out_587104994641019900[242] = 0;
   out_587104994641019900[243] = 0;
   out_587104994641019900[244] = 0;
   out_587104994641019900[245] = 0;
   out_587104994641019900[246] = 0;
   out_587104994641019900[247] = 0;
   out_587104994641019900[248] = 0;
   out_587104994641019900[249] = 0;
   out_587104994641019900[250] = 0;
   out_587104994641019900[251] = 0;
   out_587104994641019900[252] = 0;
   out_587104994641019900[253] = 0;
   out_587104994641019900[254] = 0;
   out_587104994641019900[255] = 0;
   out_587104994641019900[256] = 0;
   out_587104994641019900[257] = 0;
   out_587104994641019900[258] = 0;
   out_587104994641019900[259] = 0;
   out_587104994641019900[260] = 0;
   out_587104994641019900[261] = 0;
   out_587104994641019900[262] = 0;
   out_587104994641019900[263] = 1.0;
   out_587104994641019900[264] = 0;
   out_587104994641019900[265] = 0;
   out_587104994641019900[266] = 0;
   out_587104994641019900[267] = 0;
   out_587104994641019900[268] = 0;
   out_587104994641019900[269] = 0;
   out_587104994641019900[270] = 0;
   out_587104994641019900[271] = 0;
   out_587104994641019900[272] = 0;
   out_587104994641019900[273] = 0;
   out_587104994641019900[274] = 0;
   out_587104994641019900[275] = 0;
   out_587104994641019900[276] = 0;
   out_587104994641019900[277] = 0;
   out_587104994641019900[278] = 0;
   out_587104994641019900[279] = 0;
   out_587104994641019900[280] = 0;
   out_587104994641019900[281] = 0;
   out_587104994641019900[282] = 0;
   out_587104994641019900[283] = 0;
   out_587104994641019900[284] = 0;
   out_587104994641019900[285] = 1.0;
   out_587104994641019900[286] = 0;
   out_587104994641019900[287] = 0;
   out_587104994641019900[288] = 0;
   out_587104994641019900[289] = 0;
   out_587104994641019900[290] = 0;
   out_587104994641019900[291] = 0;
   out_587104994641019900[292] = 0;
   out_587104994641019900[293] = 0;
   out_587104994641019900[294] = 0;
   out_587104994641019900[295] = 0;
   out_587104994641019900[296] = 0;
   out_587104994641019900[297] = 0;
   out_587104994641019900[298] = 0;
   out_587104994641019900[299] = 0;
   out_587104994641019900[300] = 0;
   out_587104994641019900[301] = 0;
   out_587104994641019900[302] = 0;
   out_587104994641019900[303] = 0;
   out_587104994641019900[304] = 0;
   out_587104994641019900[305] = 0;
   out_587104994641019900[306] = 0;
   out_587104994641019900[307] = 1.0;
   out_587104994641019900[308] = 0;
   out_587104994641019900[309] = 0;
   out_587104994641019900[310] = 0;
   out_587104994641019900[311] = 0;
   out_587104994641019900[312] = 0;
   out_587104994641019900[313] = 0;
   out_587104994641019900[314] = 0;
   out_587104994641019900[315] = 0;
   out_587104994641019900[316] = 0;
   out_587104994641019900[317] = 0;
   out_587104994641019900[318] = 0;
   out_587104994641019900[319] = 0;
   out_587104994641019900[320] = 0;
   out_587104994641019900[321] = 0;
   out_587104994641019900[322] = 0;
   out_587104994641019900[323] = 0;
   out_587104994641019900[324] = 0;
   out_587104994641019900[325] = 0;
   out_587104994641019900[326] = 0;
   out_587104994641019900[327] = 0;
   out_587104994641019900[328] = 0;
   out_587104994641019900[329] = 1.0;
   out_587104994641019900[330] = 0;
   out_587104994641019900[331] = 0;
   out_587104994641019900[332] = 0;
   out_587104994641019900[333] = 0;
   out_587104994641019900[334] = 0;
   out_587104994641019900[335] = 0;
   out_587104994641019900[336] = 0;
   out_587104994641019900[337] = 0;
   out_587104994641019900[338] = 0;
   out_587104994641019900[339] = 0;
   out_587104994641019900[340] = 0;
   out_587104994641019900[341] = 0;
   out_587104994641019900[342] = 0;
   out_587104994641019900[343] = 0;
   out_587104994641019900[344] = 0;
   out_587104994641019900[345] = 0;
   out_587104994641019900[346] = 0;
   out_587104994641019900[347] = 0;
   out_587104994641019900[348] = 0;
   out_587104994641019900[349] = 0;
   out_587104994641019900[350] = 0;
   out_587104994641019900[351] = 1.0;
   out_587104994641019900[352] = 0;
   out_587104994641019900[353] = 0;
   out_587104994641019900[354] = 0;
   out_587104994641019900[355] = 0;
   out_587104994641019900[356] = 0;
   out_587104994641019900[357] = 0;
   out_587104994641019900[358] = 0;
   out_587104994641019900[359] = 0;
   out_587104994641019900[360] = 0;
   out_587104994641019900[361] = 0;
   out_587104994641019900[362] = 0;
   out_587104994641019900[363] = 0;
   out_587104994641019900[364] = 0;
   out_587104994641019900[365] = 0;
   out_587104994641019900[366] = 0;
   out_587104994641019900[367] = 0;
   out_587104994641019900[368] = 0;
   out_587104994641019900[369] = 0;
   out_587104994641019900[370] = 0;
   out_587104994641019900[371] = 0;
   out_587104994641019900[372] = 0;
   out_587104994641019900[373] = 1.0;
   out_587104994641019900[374] = 0;
   out_587104994641019900[375] = 0;
   out_587104994641019900[376] = 0;
   out_587104994641019900[377] = 0;
   out_587104994641019900[378] = 0;
   out_587104994641019900[379] = 0;
   out_587104994641019900[380] = 0;
   out_587104994641019900[381] = 0;
   out_587104994641019900[382] = 0;
   out_587104994641019900[383] = 0;
   out_587104994641019900[384] = 0;
   out_587104994641019900[385] = 0;
   out_587104994641019900[386] = 0;
   out_587104994641019900[387] = 0;
   out_587104994641019900[388] = 0;
   out_587104994641019900[389] = 0;
   out_587104994641019900[390] = 0;
   out_587104994641019900[391] = 0;
   out_587104994641019900[392] = 0;
   out_587104994641019900[393] = 0;
   out_587104994641019900[394] = 0;
   out_587104994641019900[395] = 1.0;
   out_587104994641019900[396] = 0;
   out_587104994641019900[397] = 0;
   out_587104994641019900[398] = 0;
   out_587104994641019900[399] = 0;
   out_587104994641019900[400] = 0;
   out_587104994641019900[401] = 0;
   out_587104994641019900[402] = 0;
   out_587104994641019900[403] = 0;
   out_587104994641019900[404] = 0;
   out_587104994641019900[405] = 0;
   out_587104994641019900[406] = 0;
   out_587104994641019900[407] = 0;
   out_587104994641019900[408] = 0;
   out_587104994641019900[409] = 0;
   out_587104994641019900[410] = 0;
   out_587104994641019900[411] = 0;
   out_587104994641019900[412] = 0;
   out_587104994641019900[413] = 0;
   out_587104994641019900[414] = 0;
   out_587104994641019900[415] = 0;
   out_587104994641019900[416] = 0;
   out_587104994641019900[417] = 1.0;
   out_587104994641019900[418] = 0;
   out_587104994641019900[419] = 0;
   out_587104994641019900[420] = 0;
   out_587104994641019900[421] = 0;
   out_587104994641019900[422] = 0;
   out_587104994641019900[423] = 0;
   out_587104994641019900[424] = 0;
   out_587104994641019900[425] = 0;
   out_587104994641019900[426] = 0;
   out_587104994641019900[427] = 0;
   out_587104994641019900[428] = 0;
   out_587104994641019900[429] = 0;
   out_587104994641019900[430] = 0;
   out_587104994641019900[431] = 0;
   out_587104994641019900[432] = 0;
   out_587104994641019900[433] = 0;
   out_587104994641019900[434] = 0;
   out_587104994641019900[435] = 0;
   out_587104994641019900[436] = 0;
   out_587104994641019900[437] = 0;
   out_587104994641019900[438] = 0;
   out_587104994641019900[439] = 1.0;
   out_587104994641019900[440] = 0;
   out_587104994641019900[441] = 0;
   out_587104994641019900[442] = 0;
   out_587104994641019900[443] = 0;
   out_587104994641019900[444] = 0;
   out_587104994641019900[445] = 0;
   out_587104994641019900[446] = 0;
   out_587104994641019900[447] = 0;
   out_587104994641019900[448] = 0;
   out_587104994641019900[449] = 0;
   out_587104994641019900[450] = 0;
   out_587104994641019900[451] = 0;
   out_587104994641019900[452] = 0;
   out_587104994641019900[453] = 0;
   out_587104994641019900[454] = 0;
   out_587104994641019900[455] = 0;
   out_587104994641019900[456] = 0;
   out_587104994641019900[457] = 0;
   out_587104994641019900[458] = 0;
   out_587104994641019900[459] = 0;
   out_587104994641019900[460] = 0;
   out_587104994641019900[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2978642854143158247) {
   out_2978642854143158247[0] = dt*state[7] + state[0];
   out_2978642854143158247[1] = dt*state[8] + state[1];
   out_2978642854143158247[2] = dt*state[9] + state[2];
   out_2978642854143158247[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2978642854143158247[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2978642854143158247[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2978642854143158247[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2978642854143158247[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2978642854143158247[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2978642854143158247[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2978642854143158247[10] = state[10];
   out_2978642854143158247[11] = state[11];
   out_2978642854143158247[12] = state[12];
   out_2978642854143158247[13] = state[13];
   out_2978642854143158247[14] = state[14];
   out_2978642854143158247[15] = state[15];
   out_2978642854143158247[16] = state[16];
   out_2978642854143158247[17] = state[17];
   out_2978642854143158247[18] = state[18];
   out_2978642854143158247[19] = state[19];
   out_2978642854143158247[20] = state[20];
   out_2978642854143158247[21] = state[21];
}
void F_fun(double *state, double dt, double *out_388375667706179161) {
   out_388375667706179161[0] = 1;
   out_388375667706179161[1] = 0;
   out_388375667706179161[2] = 0;
   out_388375667706179161[3] = 0;
   out_388375667706179161[4] = 0;
   out_388375667706179161[5] = 0;
   out_388375667706179161[6] = dt;
   out_388375667706179161[7] = 0;
   out_388375667706179161[8] = 0;
   out_388375667706179161[9] = 0;
   out_388375667706179161[10] = 0;
   out_388375667706179161[11] = 0;
   out_388375667706179161[12] = 0;
   out_388375667706179161[13] = 0;
   out_388375667706179161[14] = 0;
   out_388375667706179161[15] = 0;
   out_388375667706179161[16] = 0;
   out_388375667706179161[17] = 0;
   out_388375667706179161[18] = 0;
   out_388375667706179161[19] = 0;
   out_388375667706179161[20] = 0;
   out_388375667706179161[21] = 0;
   out_388375667706179161[22] = 1;
   out_388375667706179161[23] = 0;
   out_388375667706179161[24] = 0;
   out_388375667706179161[25] = 0;
   out_388375667706179161[26] = 0;
   out_388375667706179161[27] = 0;
   out_388375667706179161[28] = dt;
   out_388375667706179161[29] = 0;
   out_388375667706179161[30] = 0;
   out_388375667706179161[31] = 0;
   out_388375667706179161[32] = 0;
   out_388375667706179161[33] = 0;
   out_388375667706179161[34] = 0;
   out_388375667706179161[35] = 0;
   out_388375667706179161[36] = 0;
   out_388375667706179161[37] = 0;
   out_388375667706179161[38] = 0;
   out_388375667706179161[39] = 0;
   out_388375667706179161[40] = 0;
   out_388375667706179161[41] = 0;
   out_388375667706179161[42] = 0;
   out_388375667706179161[43] = 0;
   out_388375667706179161[44] = 1;
   out_388375667706179161[45] = 0;
   out_388375667706179161[46] = 0;
   out_388375667706179161[47] = 0;
   out_388375667706179161[48] = 0;
   out_388375667706179161[49] = 0;
   out_388375667706179161[50] = dt;
   out_388375667706179161[51] = 0;
   out_388375667706179161[52] = 0;
   out_388375667706179161[53] = 0;
   out_388375667706179161[54] = 0;
   out_388375667706179161[55] = 0;
   out_388375667706179161[56] = 0;
   out_388375667706179161[57] = 0;
   out_388375667706179161[58] = 0;
   out_388375667706179161[59] = 0;
   out_388375667706179161[60] = 0;
   out_388375667706179161[61] = 0;
   out_388375667706179161[62] = 0;
   out_388375667706179161[63] = 0;
   out_388375667706179161[64] = 0;
   out_388375667706179161[65] = 0;
   out_388375667706179161[66] = 1;
   out_388375667706179161[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_388375667706179161[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_388375667706179161[69] = 0;
   out_388375667706179161[70] = 0;
   out_388375667706179161[71] = 0;
   out_388375667706179161[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_388375667706179161[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_388375667706179161[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_388375667706179161[75] = 0;
   out_388375667706179161[76] = 0;
   out_388375667706179161[77] = 0;
   out_388375667706179161[78] = 0;
   out_388375667706179161[79] = 0;
   out_388375667706179161[80] = 0;
   out_388375667706179161[81] = 0;
   out_388375667706179161[82] = 0;
   out_388375667706179161[83] = 0;
   out_388375667706179161[84] = 0;
   out_388375667706179161[85] = 0;
   out_388375667706179161[86] = 0;
   out_388375667706179161[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_388375667706179161[88] = 1;
   out_388375667706179161[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_388375667706179161[90] = 0;
   out_388375667706179161[91] = 0;
   out_388375667706179161[92] = 0;
   out_388375667706179161[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_388375667706179161[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_388375667706179161[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_388375667706179161[96] = 0;
   out_388375667706179161[97] = 0;
   out_388375667706179161[98] = 0;
   out_388375667706179161[99] = 0;
   out_388375667706179161[100] = 0;
   out_388375667706179161[101] = 0;
   out_388375667706179161[102] = 0;
   out_388375667706179161[103] = 0;
   out_388375667706179161[104] = 0;
   out_388375667706179161[105] = 0;
   out_388375667706179161[106] = 0;
   out_388375667706179161[107] = 0;
   out_388375667706179161[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_388375667706179161[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_388375667706179161[110] = 1;
   out_388375667706179161[111] = 0;
   out_388375667706179161[112] = 0;
   out_388375667706179161[113] = 0;
   out_388375667706179161[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_388375667706179161[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_388375667706179161[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_388375667706179161[117] = 0;
   out_388375667706179161[118] = 0;
   out_388375667706179161[119] = 0;
   out_388375667706179161[120] = 0;
   out_388375667706179161[121] = 0;
   out_388375667706179161[122] = 0;
   out_388375667706179161[123] = 0;
   out_388375667706179161[124] = 0;
   out_388375667706179161[125] = 0;
   out_388375667706179161[126] = 0;
   out_388375667706179161[127] = 0;
   out_388375667706179161[128] = 0;
   out_388375667706179161[129] = 0;
   out_388375667706179161[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_388375667706179161[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_388375667706179161[132] = 1;
   out_388375667706179161[133] = 0;
   out_388375667706179161[134] = 0;
   out_388375667706179161[135] = 0;
   out_388375667706179161[136] = 0;
   out_388375667706179161[137] = 0;
   out_388375667706179161[138] = 0;
   out_388375667706179161[139] = 0;
   out_388375667706179161[140] = 0;
   out_388375667706179161[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_388375667706179161[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_388375667706179161[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_388375667706179161[144] = 0;
   out_388375667706179161[145] = 0;
   out_388375667706179161[146] = 0;
   out_388375667706179161[147] = 0;
   out_388375667706179161[148] = 0;
   out_388375667706179161[149] = 0;
   out_388375667706179161[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_388375667706179161[151] = 0;
   out_388375667706179161[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_388375667706179161[153] = 0;
   out_388375667706179161[154] = 1;
   out_388375667706179161[155] = 0;
   out_388375667706179161[156] = 0;
   out_388375667706179161[157] = 0;
   out_388375667706179161[158] = 0;
   out_388375667706179161[159] = 0;
   out_388375667706179161[160] = 0;
   out_388375667706179161[161] = 0;
   out_388375667706179161[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_388375667706179161[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_388375667706179161[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_388375667706179161[165] = 0;
   out_388375667706179161[166] = 0;
   out_388375667706179161[167] = 0;
   out_388375667706179161[168] = 0;
   out_388375667706179161[169] = 0;
   out_388375667706179161[170] = 0;
   out_388375667706179161[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_388375667706179161[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_388375667706179161[173] = 0;
   out_388375667706179161[174] = 0;
   out_388375667706179161[175] = 0;
   out_388375667706179161[176] = 1;
   out_388375667706179161[177] = 0;
   out_388375667706179161[178] = 0;
   out_388375667706179161[179] = 0;
   out_388375667706179161[180] = 0;
   out_388375667706179161[181] = 0;
   out_388375667706179161[182] = 0;
   out_388375667706179161[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_388375667706179161[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_388375667706179161[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_388375667706179161[186] = 0;
   out_388375667706179161[187] = 0;
   out_388375667706179161[188] = 0;
   out_388375667706179161[189] = 0;
   out_388375667706179161[190] = 0;
   out_388375667706179161[191] = 0;
   out_388375667706179161[192] = 0;
   out_388375667706179161[193] = 0;
   out_388375667706179161[194] = 0;
   out_388375667706179161[195] = 0;
   out_388375667706179161[196] = 0;
   out_388375667706179161[197] = 0;
   out_388375667706179161[198] = 1;
   out_388375667706179161[199] = 0;
   out_388375667706179161[200] = 0;
   out_388375667706179161[201] = 0;
   out_388375667706179161[202] = 0;
   out_388375667706179161[203] = 0;
   out_388375667706179161[204] = 0;
   out_388375667706179161[205] = 0;
   out_388375667706179161[206] = 0;
   out_388375667706179161[207] = 0;
   out_388375667706179161[208] = 0;
   out_388375667706179161[209] = 0;
   out_388375667706179161[210] = 0;
   out_388375667706179161[211] = 0;
   out_388375667706179161[212] = 0;
   out_388375667706179161[213] = 0;
   out_388375667706179161[214] = 0;
   out_388375667706179161[215] = 0;
   out_388375667706179161[216] = 0;
   out_388375667706179161[217] = 0;
   out_388375667706179161[218] = 0;
   out_388375667706179161[219] = 0;
   out_388375667706179161[220] = 1;
   out_388375667706179161[221] = 0;
   out_388375667706179161[222] = 0;
   out_388375667706179161[223] = 0;
   out_388375667706179161[224] = 0;
   out_388375667706179161[225] = 0;
   out_388375667706179161[226] = 0;
   out_388375667706179161[227] = 0;
   out_388375667706179161[228] = 0;
   out_388375667706179161[229] = 0;
   out_388375667706179161[230] = 0;
   out_388375667706179161[231] = 0;
   out_388375667706179161[232] = 0;
   out_388375667706179161[233] = 0;
   out_388375667706179161[234] = 0;
   out_388375667706179161[235] = 0;
   out_388375667706179161[236] = 0;
   out_388375667706179161[237] = 0;
   out_388375667706179161[238] = 0;
   out_388375667706179161[239] = 0;
   out_388375667706179161[240] = 0;
   out_388375667706179161[241] = 0;
   out_388375667706179161[242] = 1;
   out_388375667706179161[243] = 0;
   out_388375667706179161[244] = 0;
   out_388375667706179161[245] = 0;
   out_388375667706179161[246] = 0;
   out_388375667706179161[247] = 0;
   out_388375667706179161[248] = 0;
   out_388375667706179161[249] = 0;
   out_388375667706179161[250] = 0;
   out_388375667706179161[251] = 0;
   out_388375667706179161[252] = 0;
   out_388375667706179161[253] = 0;
   out_388375667706179161[254] = 0;
   out_388375667706179161[255] = 0;
   out_388375667706179161[256] = 0;
   out_388375667706179161[257] = 0;
   out_388375667706179161[258] = 0;
   out_388375667706179161[259] = 0;
   out_388375667706179161[260] = 0;
   out_388375667706179161[261] = 0;
   out_388375667706179161[262] = 0;
   out_388375667706179161[263] = 0;
   out_388375667706179161[264] = 1;
   out_388375667706179161[265] = 0;
   out_388375667706179161[266] = 0;
   out_388375667706179161[267] = 0;
   out_388375667706179161[268] = 0;
   out_388375667706179161[269] = 0;
   out_388375667706179161[270] = 0;
   out_388375667706179161[271] = 0;
   out_388375667706179161[272] = 0;
   out_388375667706179161[273] = 0;
   out_388375667706179161[274] = 0;
   out_388375667706179161[275] = 0;
   out_388375667706179161[276] = 0;
   out_388375667706179161[277] = 0;
   out_388375667706179161[278] = 0;
   out_388375667706179161[279] = 0;
   out_388375667706179161[280] = 0;
   out_388375667706179161[281] = 0;
   out_388375667706179161[282] = 0;
   out_388375667706179161[283] = 0;
   out_388375667706179161[284] = 0;
   out_388375667706179161[285] = 0;
   out_388375667706179161[286] = 1;
   out_388375667706179161[287] = 0;
   out_388375667706179161[288] = 0;
   out_388375667706179161[289] = 0;
   out_388375667706179161[290] = 0;
   out_388375667706179161[291] = 0;
   out_388375667706179161[292] = 0;
   out_388375667706179161[293] = 0;
   out_388375667706179161[294] = 0;
   out_388375667706179161[295] = 0;
   out_388375667706179161[296] = 0;
   out_388375667706179161[297] = 0;
   out_388375667706179161[298] = 0;
   out_388375667706179161[299] = 0;
   out_388375667706179161[300] = 0;
   out_388375667706179161[301] = 0;
   out_388375667706179161[302] = 0;
   out_388375667706179161[303] = 0;
   out_388375667706179161[304] = 0;
   out_388375667706179161[305] = 0;
   out_388375667706179161[306] = 0;
   out_388375667706179161[307] = 0;
   out_388375667706179161[308] = 1;
   out_388375667706179161[309] = 0;
   out_388375667706179161[310] = 0;
   out_388375667706179161[311] = 0;
   out_388375667706179161[312] = 0;
   out_388375667706179161[313] = 0;
   out_388375667706179161[314] = 0;
   out_388375667706179161[315] = 0;
   out_388375667706179161[316] = 0;
   out_388375667706179161[317] = 0;
   out_388375667706179161[318] = 0;
   out_388375667706179161[319] = 0;
   out_388375667706179161[320] = 0;
   out_388375667706179161[321] = 0;
   out_388375667706179161[322] = 0;
   out_388375667706179161[323] = 0;
   out_388375667706179161[324] = 0;
   out_388375667706179161[325] = 0;
   out_388375667706179161[326] = 0;
   out_388375667706179161[327] = 0;
   out_388375667706179161[328] = 0;
   out_388375667706179161[329] = 0;
   out_388375667706179161[330] = 1;
   out_388375667706179161[331] = 0;
   out_388375667706179161[332] = 0;
   out_388375667706179161[333] = 0;
   out_388375667706179161[334] = 0;
   out_388375667706179161[335] = 0;
   out_388375667706179161[336] = 0;
   out_388375667706179161[337] = 0;
   out_388375667706179161[338] = 0;
   out_388375667706179161[339] = 0;
   out_388375667706179161[340] = 0;
   out_388375667706179161[341] = 0;
   out_388375667706179161[342] = 0;
   out_388375667706179161[343] = 0;
   out_388375667706179161[344] = 0;
   out_388375667706179161[345] = 0;
   out_388375667706179161[346] = 0;
   out_388375667706179161[347] = 0;
   out_388375667706179161[348] = 0;
   out_388375667706179161[349] = 0;
   out_388375667706179161[350] = 0;
   out_388375667706179161[351] = 0;
   out_388375667706179161[352] = 1;
   out_388375667706179161[353] = 0;
   out_388375667706179161[354] = 0;
   out_388375667706179161[355] = 0;
   out_388375667706179161[356] = 0;
   out_388375667706179161[357] = 0;
   out_388375667706179161[358] = 0;
   out_388375667706179161[359] = 0;
   out_388375667706179161[360] = 0;
   out_388375667706179161[361] = 0;
   out_388375667706179161[362] = 0;
   out_388375667706179161[363] = 0;
   out_388375667706179161[364] = 0;
   out_388375667706179161[365] = 0;
   out_388375667706179161[366] = 0;
   out_388375667706179161[367] = 0;
   out_388375667706179161[368] = 0;
   out_388375667706179161[369] = 0;
   out_388375667706179161[370] = 0;
   out_388375667706179161[371] = 0;
   out_388375667706179161[372] = 0;
   out_388375667706179161[373] = 0;
   out_388375667706179161[374] = 1;
   out_388375667706179161[375] = 0;
   out_388375667706179161[376] = 0;
   out_388375667706179161[377] = 0;
   out_388375667706179161[378] = 0;
   out_388375667706179161[379] = 0;
   out_388375667706179161[380] = 0;
   out_388375667706179161[381] = 0;
   out_388375667706179161[382] = 0;
   out_388375667706179161[383] = 0;
   out_388375667706179161[384] = 0;
   out_388375667706179161[385] = 0;
   out_388375667706179161[386] = 0;
   out_388375667706179161[387] = 0;
   out_388375667706179161[388] = 0;
   out_388375667706179161[389] = 0;
   out_388375667706179161[390] = 0;
   out_388375667706179161[391] = 0;
   out_388375667706179161[392] = 0;
   out_388375667706179161[393] = 0;
   out_388375667706179161[394] = 0;
   out_388375667706179161[395] = 0;
   out_388375667706179161[396] = 1;
   out_388375667706179161[397] = 0;
   out_388375667706179161[398] = 0;
   out_388375667706179161[399] = 0;
   out_388375667706179161[400] = 0;
   out_388375667706179161[401] = 0;
   out_388375667706179161[402] = 0;
   out_388375667706179161[403] = 0;
   out_388375667706179161[404] = 0;
   out_388375667706179161[405] = 0;
   out_388375667706179161[406] = 0;
   out_388375667706179161[407] = 0;
   out_388375667706179161[408] = 0;
   out_388375667706179161[409] = 0;
   out_388375667706179161[410] = 0;
   out_388375667706179161[411] = 0;
   out_388375667706179161[412] = 0;
   out_388375667706179161[413] = 0;
   out_388375667706179161[414] = 0;
   out_388375667706179161[415] = 0;
   out_388375667706179161[416] = 0;
   out_388375667706179161[417] = 0;
   out_388375667706179161[418] = 1;
   out_388375667706179161[419] = 0;
   out_388375667706179161[420] = 0;
   out_388375667706179161[421] = 0;
   out_388375667706179161[422] = 0;
   out_388375667706179161[423] = 0;
   out_388375667706179161[424] = 0;
   out_388375667706179161[425] = 0;
   out_388375667706179161[426] = 0;
   out_388375667706179161[427] = 0;
   out_388375667706179161[428] = 0;
   out_388375667706179161[429] = 0;
   out_388375667706179161[430] = 0;
   out_388375667706179161[431] = 0;
   out_388375667706179161[432] = 0;
   out_388375667706179161[433] = 0;
   out_388375667706179161[434] = 0;
   out_388375667706179161[435] = 0;
   out_388375667706179161[436] = 0;
   out_388375667706179161[437] = 0;
   out_388375667706179161[438] = 0;
   out_388375667706179161[439] = 0;
   out_388375667706179161[440] = 1;
}
void h_4(double *state, double *unused, double *out_2316967131109145089) {
   out_2316967131109145089[0] = state[10] + state[13];
   out_2316967131109145089[1] = state[11] + state[14];
   out_2316967131109145089[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4432159738179544458) {
   out_4432159738179544458[0] = 0;
   out_4432159738179544458[1] = 0;
   out_4432159738179544458[2] = 0;
   out_4432159738179544458[3] = 0;
   out_4432159738179544458[4] = 0;
   out_4432159738179544458[5] = 0;
   out_4432159738179544458[6] = 0;
   out_4432159738179544458[7] = 0;
   out_4432159738179544458[8] = 0;
   out_4432159738179544458[9] = 0;
   out_4432159738179544458[10] = 1;
   out_4432159738179544458[11] = 0;
   out_4432159738179544458[12] = 0;
   out_4432159738179544458[13] = 1;
   out_4432159738179544458[14] = 0;
   out_4432159738179544458[15] = 0;
   out_4432159738179544458[16] = 0;
   out_4432159738179544458[17] = 0;
   out_4432159738179544458[18] = 0;
   out_4432159738179544458[19] = 0;
   out_4432159738179544458[20] = 0;
   out_4432159738179544458[21] = 0;
   out_4432159738179544458[22] = 0;
   out_4432159738179544458[23] = 0;
   out_4432159738179544458[24] = 0;
   out_4432159738179544458[25] = 0;
   out_4432159738179544458[26] = 0;
   out_4432159738179544458[27] = 0;
   out_4432159738179544458[28] = 0;
   out_4432159738179544458[29] = 0;
   out_4432159738179544458[30] = 0;
   out_4432159738179544458[31] = 0;
   out_4432159738179544458[32] = 0;
   out_4432159738179544458[33] = 1;
   out_4432159738179544458[34] = 0;
   out_4432159738179544458[35] = 0;
   out_4432159738179544458[36] = 1;
   out_4432159738179544458[37] = 0;
   out_4432159738179544458[38] = 0;
   out_4432159738179544458[39] = 0;
   out_4432159738179544458[40] = 0;
   out_4432159738179544458[41] = 0;
   out_4432159738179544458[42] = 0;
   out_4432159738179544458[43] = 0;
   out_4432159738179544458[44] = 0;
   out_4432159738179544458[45] = 0;
   out_4432159738179544458[46] = 0;
   out_4432159738179544458[47] = 0;
   out_4432159738179544458[48] = 0;
   out_4432159738179544458[49] = 0;
   out_4432159738179544458[50] = 0;
   out_4432159738179544458[51] = 0;
   out_4432159738179544458[52] = 0;
   out_4432159738179544458[53] = 0;
   out_4432159738179544458[54] = 0;
   out_4432159738179544458[55] = 0;
   out_4432159738179544458[56] = 1;
   out_4432159738179544458[57] = 0;
   out_4432159738179544458[58] = 0;
   out_4432159738179544458[59] = 1;
   out_4432159738179544458[60] = 0;
   out_4432159738179544458[61] = 0;
   out_4432159738179544458[62] = 0;
   out_4432159738179544458[63] = 0;
   out_4432159738179544458[64] = 0;
   out_4432159738179544458[65] = 0;
}
void h_9(double *state, double *unused, double *out_7982815944968852205) {
   out_7982815944968852205[0] = state[10];
   out_7982815944968852205[1] = state[11];
   out_7982815944968852205[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6727365400265559688) {
   out_6727365400265559688[0] = 0;
   out_6727365400265559688[1] = 0;
   out_6727365400265559688[2] = 0;
   out_6727365400265559688[3] = 0;
   out_6727365400265559688[4] = 0;
   out_6727365400265559688[5] = 0;
   out_6727365400265559688[6] = 0;
   out_6727365400265559688[7] = 0;
   out_6727365400265559688[8] = 0;
   out_6727365400265559688[9] = 0;
   out_6727365400265559688[10] = 1;
   out_6727365400265559688[11] = 0;
   out_6727365400265559688[12] = 0;
   out_6727365400265559688[13] = 0;
   out_6727365400265559688[14] = 0;
   out_6727365400265559688[15] = 0;
   out_6727365400265559688[16] = 0;
   out_6727365400265559688[17] = 0;
   out_6727365400265559688[18] = 0;
   out_6727365400265559688[19] = 0;
   out_6727365400265559688[20] = 0;
   out_6727365400265559688[21] = 0;
   out_6727365400265559688[22] = 0;
   out_6727365400265559688[23] = 0;
   out_6727365400265559688[24] = 0;
   out_6727365400265559688[25] = 0;
   out_6727365400265559688[26] = 0;
   out_6727365400265559688[27] = 0;
   out_6727365400265559688[28] = 0;
   out_6727365400265559688[29] = 0;
   out_6727365400265559688[30] = 0;
   out_6727365400265559688[31] = 0;
   out_6727365400265559688[32] = 0;
   out_6727365400265559688[33] = 1;
   out_6727365400265559688[34] = 0;
   out_6727365400265559688[35] = 0;
   out_6727365400265559688[36] = 0;
   out_6727365400265559688[37] = 0;
   out_6727365400265559688[38] = 0;
   out_6727365400265559688[39] = 0;
   out_6727365400265559688[40] = 0;
   out_6727365400265559688[41] = 0;
   out_6727365400265559688[42] = 0;
   out_6727365400265559688[43] = 0;
   out_6727365400265559688[44] = 0;
   out_6727365400265559688[45] = 0;
   out_6727365400265559688[46] = 0;
   out_6727365400265559688[47] = 0;
   out_6727365400265559688[48] = 0;
   out_6727365400265559688[49] = 0;
   out_6727365400265559688[50] = 0;
   out_6727365400265559688[51] = 0;
   out_6727365400265559688[52] = 0;
   out_6727365400265559688[53] = 0;
   out_6727365400265559688[54] = 0;
   out_6727365400265559688[55] = 0;
   out_6727365400265559688[56] = 1;
   out_6727365400265559688[57] = 0;
   out_6727365400265559688[58] = 0;
   out_6727365400265559688[59] = 0;
   out_6727365400265559688[60] = 0;
   out_6727365400265559688[61] = 0;
   out_6727365400265559688[62] = 0;
   out_6727365400265559688[63] = 0;
   out_6727365400265559688[64] = 0;
   out_6727365400265559688[65] = 0;
}
void h_10(double *state, double *unused, double *out_5085672873651168485) {
   out_5085672873651168485[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5085672873651168485[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5085672873651168485[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3842366662318691362) {
   out_3842366662318691362[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3842366662318691362[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3842366662318691362[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3842366662318691362[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3842366662318691362[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3842366662318691362[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3842366662318691362[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3842366662318691362[7] = 0;
   out_3842366662318691362[8] = 0;
   out_3842366662318691362[9] = 0;
   out_3842366662318691362[10] = 0;
   out_3842366662318691362[11] = 0;
   out_3842366662318691362[12] = 0;
   out_3842366662318691362[13] = 0;
   out_3842366662318691362[14] = 0;
   out_3842366662318691362[15] = 0;
   out_3842366662318691362[16] = 1;
   out_3842366662318691362[17] = 0;
   out_3842366662318691362[18] = 0;
   out_3842366662318691362[19] = 1;
   out_3842366662318691362[20] = 0;
   out_3842366662318691362[21] = 0;
   out_3842366662318691362[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3842366662318691362[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3842366662318691362[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3842366662318691362[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3842366662318691362[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3842366662318691362[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3842366662318691362[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3842366662318691362[29] = 0;
   out_3842366662318691362[30] = 0;
   out_3842366662318691362[31] = 0;
   out_3842366662318691362[32] = 0;
   out_3842366662318691362[33] = 0;
   out_3842366662318691362[34] = 0;
   out_3842366662318691362[35] = 0;
   out_3842366662318691362[36] = 0;
   out_3842366662318691362[37] = 0;
   out_3842366662318691362[38] = 0;
   out_3842366662318691362[39] = 1;
   out_3842366662318691362[40] = 0;
   out_3842366662318691362[41] = 0;
   out_3842366662318691362[42] = 1;
   out_3842366662318691362[43] = 0;
   out_3842366662318691362[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3842366662318691362[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3842366662318691362[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3842366662318691362[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3842366662318691362[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3842366662318691362[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3842366662318691362[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3842366662318691362[51] = 0;
   out_3842366662318691362[52] = 0;
   out_3842366662318691362[53] = 0;
   out_3842366662318691362[54] = 0;
   out_3842366662318691362[55] = 0;
   out_3842366662318691362[56] = 0;
   out_3842366662318691362[57] = 0;
   out_3842366662318691362[58] = 0;
   out_3842366662318691362[59] = 0;
   out_3842366662318691362[60] = 0;
   out_3842366662318691362[61] = 0;
   out_3842366662318691362[62] = 1;
   out_3842366662318691362[63] = 0;
   out_3842366662318691362[64] = 0;
   out_3842366662318691362[65] = 1;
}
void h_12(double *state, double *unused, double *out_1420358811908403366) {
   out_1420358811908403366[0] = state[0];
   out_1420358811908403366[1] = state[1];
   out_1420358811908403366[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1949098638863188538) {
   out_1949098638863188538[0] = 1;
   out_1949098638863188538[1] = 0;
   out_1949098638863188538[2] = 0;
   out_1949098638863188538[3] = 0;
   out_1949098638863188538[4] = 0;
   out_1949098638863188538[5] = 0;
   out_1949098638863188538[6] = 0;
   out_1949098638863188538[7] = 0;
   out_1949098638863188538[8] = 0;
   out_1949098638863188538[9] = 0;
   out_1949098638863188538[10] = 0;
   out_1949098638863188538[11] = 0;
   out_1949098638863188538[12] = 0;
   out_1949098638863188538[13] = 0;
   out_1949098638863188538[14] = 0;
   out_1949098638863188538[15] = 0;
   out_1949098638863188538[16] = 0;
   out_1949098638863188538[17] = 0;
   out_1949098638863188538[18] = 0;
   out_1949098638863188538[19] = 0;
   out_1949098638863188538[20] = 0;
   out_1949098638863188538[21] = 0;
   out_1949098638863188538[22] = 0;
   out_1949098638863188538[23] = 1;
   out_1949098638863188538[24] = 0;
   out_1949098638863188538[25] = 0;
   out_1949098638863188538[26] = 0;
   out_1949098638863188538[27] = 0;
   out_1949098638863188538[28] = 0;
   out_1949098638863188538[29] = 0;
   out_1949098638863188538[30] = 0;
   out_1949098638863188538[31] = 0;
   out_1949098638863188538[32] = 0;
   out_1949098638863188538[33] = 0;
   out_1949098638863188538[34] = 0;
   out_1949098638863188538[35] = 0;
   out_1949098638863188538[36] = 0;
   out_1949098638863188538[37] = 0;
   out_1949098638863188538[38] = 0;
   out_1949098638863188538[39] = 0;
   out_1949098638863188538[40] = 0;
   out_1949098638863188538[41] = 0;
   out_1949098638863188538[42] = 0;
   out_1949098638863188538[43] = 0;
   out_1949098638863188538[44] = 0;
   out_1949098638863188538[45] = 0;
   out_1949098638863188538[46] = 1;
   out_1949098638863188538[47] = 0;
   out_1949098638863188538[48] = 0;
   out_1949098638863188538[49] = 0;
   out_1949098638863188538[50] = 0;
   out_1949098638863188538[51] = 0;
   out_1949098638863188538[52] = 0;
   out_1949098638863188538[53] = 0;
   out_1949098638863188538[54] = 0;
   out_1949098638863188538[55] = 0;
   out_1949098638863188538[56] = 0;
   out_1949098638863188538[57] = 0;
   out_1949098638863188538[58] = 0;
   out_1949098638863188538[59] = 0;
   out_1949098638863188538[60] = 0;
   out_1949098638863188538[61] = 0;
   out_1949098638863188538[62] = 0;
   out_1949098638863188538[63] = 0;
   out_1949098638863188538[64] = 0;
   out_1949098638863188538[65] = 0;
}
void h_35(double *state, double *unused, double *out_891526568328106016) {
   out_891526568328106016[0] = state[7];
   out_891526568328106016[1] = state[8];
   out_891526568328106016[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3601892989522542957) {
   out_3601892989522542957[0] = 0;
   out_3601892989522542957[1] = 0;
   out_3601892989522542957[2] = 0;
   out_3601892989522542957[3] = 0;
   out_3601892989522542957[4] = 0;
   out_3601892989522542957[5] = 0;
   out_3601892989522542957[6] = 0;
   out_3601892989522542957[7] = 1;
   out_3601892989522542957[8] = 0;
   out_3601892989522542957[9] = 0;
   out_3601892989522542957[10] = 0;
   out_3601892989522542957[11] = 0;
   out_3601892989522542957[12] = 0;
   out_3601892989522542957[13] = 0;
   out_3601892989522542957[14] = 0;
   out_3601892989522542957[15] = 0;
   out_3601892989522542957[16] = 0;
   out_3601892989522542957[17] = 0;
   out_3601892989522542957[18] = 0;
   out_3601892989522542957[19] = 0;
   out_3601892989522542957[20] = 0;
   out_3601892989522542957[21] = 0;
   out_3601892989522542957[22] = 0;
   out_3601892989522542957[23] = 0;
   out_3601892989522542957[24] = 0;
   out_3601892989522542957[25] = 0;
   out_3601892989522542957[26] = 0;
   out_3601892989522542957[27] = 0;
   out_3601892989522542957[28] = 0;
   out_3601892989522542957[29] = 0;
   out_3601892989522542957[30] = 1;
   out_3601892989522542957[31] = 0;
   out_3601892989522542957[32] = 0;
   out_3601892989522542957[33] = 0;
   out_3601892989522542957[34] = 0;
   out_3601892989522542957[35] = 0;
   out_3601892989522542957[36] = 0;
   out_3601892989522542957[37] = 0;
   out_3601892989522542957[38] = 0;
   out_3601892989522542957[39] = 0;
   out_3601892989522542957[40] = 0;
   out_3601892989522542957[41] = 0;
   out_3601892989522542957[42] = 0;
   out_3601892989522542957[43] = 0;
   out_3601892989522542957[44] = 0;
   out_3601892989522542957[45] = 0;
   out_3601892989522542957[46] = 0;
   out_3601892989522542957[47] = 0;
   out_3601892989522542957[48] = 0;
   out_3601892989522542957[49] = 0;
   out_3601892989522542957[50] = 0;
   out_3601892989522542957[51] = 0;
   out_3601892989522542957[52] = 0;
   out_3601892989522542957[53] = 1;
   out_3601892989522542957[54] = 0;
   out_3601892989522542957[55] = 0;
   out_3601892989522542957[56] = 0;
   out_3601892989522542957[57] = 0;
   out_3601892989522542957[58] = 0;
   out_3601892989522542957[59] = 0;
   out_3601892989522542957[60] = 0;
   out_3601892989522542957[61] = 0;
   out_3601892989522542957[62] = 0;
   out_3601892989522542957[63] = 0;
   out_3601892989522542957[64] = 0;
   out_3601892989522542957[65] = 0;
}
void h_32(double *state, double *unused, double *out_2623478293943095803) {
   out_2623478293943095803[0] = state[3];
   out_2623478293943095803[1] = state[4];
   out_2623478293943095803[2] = state[5];
   out_2623478293943095803[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3580122557880242764) {
   out_3580122557880242764[0] = 0;
   out_3580122557880242764[1] = 0;
   out_3580122557880242764[2] = 0;
   out_3580122557880242764[3] = 1;
   out_3580122557880242764[4] = 0;
   out_3580122557880242764[5] = 0;
   out_3580122557880242764[6] = 0;
   out_3580122557880242764[7] = 0;
   out_3580122557880242764[8] = 0;
   out_3580122557880242764[9] = 0;
   out_3580122557880242764[10] = 0;
   out_3580122557880242764[11] = 0;
   out_3580122557880242764[12] = 0;
   out_3580122557880242764[13] = 0;
   out_3580122557880242764[14] = 0;
   out_3580122557880242764[15] = 0;
   out_3580122557880242764[16] = 0;
   out_3580122557880242764[17] = 0;
   out_3580122557880242764[18] = 0;
   out_3580122557880242764[19] = 0;
   out_3580122557880242764[20] = 0;
   out_3580122557880242764[21] = 0;
   out_3580122557880242764[22] = 0;
   out_3580122557880242764[23] = 0;
   out_3580122557880242764[24] = 0;
   out_3580122557880242764[25] = 0;
   out_3580122557880242764[26] = 1;
   out_3580122557880242764[27] = 0;
   out_3580122557880242764[28] = 0;
   out_3580122557880242764[29] = 0;
   out_3580122557880242764[30] = 0;
   out_3580122557880242764[31] = 0;
   out_3580122557880242764[32] = 0;
   out_3580122557880242764[33] = 0;
   out_3580122557880242764[34] = 0;
   out_3580122557880242764[35] = 0;
   out_3580122557880242764[36] = 0;
   out_3580122557880242764[37] = 0;
   out_3580122557880242764[38] = 0;
   out_3580122557880242764[39] = 0;
   out_3580122557880242764[40] = 0;
   out_3580122557880242764[41] = 0;
   out_3580122557880242764[42] = 0;
   out_3580122557880242764[43] = 0;
   out_3580122557880242764[44] = 0;
   out_3580122557880242764[45] = 0;
   out_3580122557880242764[46] = 0;
   out_3580122557880242764[47] = 0;
   out_3580122557880242764[48] = 0;
   out_3580122557880242764[49] = 1;
   out_3580122557880242764[50] = 0;
   out_3580122557880242764[51] = 0;
   out_3580122557880242764[52] = 0;
   out_3580122557880242764[53] = 0;
   out_3580122557880242764[54] = 0;
   out_3580122557880242764[55] = 0;
   out_3580122557880242764[56] = 0;
   out_3580122557880242764[57] = 0;
   out_3580122557880242764[58] = 0;
   out_3580122557880242764[59] = 0;
   out_3580122557880242764[60] = 0;
   out_3580122557880242764[61] = 0;
   out_3580122557880242764[62] = 0;
   out_3580122557880242764[63] = 0;
   out_3580122557880242764[64] = 0;
   out_3580122557880242764[65] = 0;
   out_3580122557880242764[66] = 0;
   out_3580122557880242764[67] = 0;
   out_3580122557880242764[68] = 0;
   out_3580122557880242764[69] = 0;
   out_3580122557880242764[70] = 0;
   out_3580122557880242764[71] = 0;
   out_3580122557880242764[72] = 1;
   out_3580122557880242764[73] = 0;
   out_3580122557880242764[74] = 0;
   out_3580122557880242764[75] = 0;
   out_3580122557880242764[76] = 0;
   out_3580122557880242764[77] = 0;
   out_3580122557880242764[78] = 0;
   out_3580122557880242764[79] = 0;
   out_3580122557880242764[80] = 0;
   out_3580122557880242764[81] = 0;
   out_3580122557880242764[82] = 0;
   out_3580122557880242764[83] = 0;
   out_3580122557880242764[84] = 0;
   out_3580122557880242764[85] = 0;
   out_3580122557880242764[86] = 0;
   out_3580122557880242764[87] = 0;
}
void h_13(double *state, double *unused, double *out_2831171244995848302) {
   out_2831171244995848302[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2831171244995848302[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2831171244995848302[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2133918316798641961) {
   out_2133918316798641961[0] = 0;
   out_2133918316798641961[1] = 0;
   out_2133918316798641961[2] = 0;
   out_2133918316798641961[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2133918316798641961[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2133918316798641961[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2133918316798641961[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2133918316798641961[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2133918316798641961[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2133918316798641961[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2133918316798641961[10] = 0;
   out_2133918316798641961[11] = 0;
   out_2133918316798641961[12] = 0;
   out_2133918316798641961[13] = 0;
   out_2133918316798641961[14] = 0;
   out_2133918316798641961[15] = 0;
   out_2133918316798641961[16] = 0;
   out_2133918316798641961[17] = 0;
   out_2133918316798641961[18] = 0;
   out_2133918316798641961[19] = 0;
   out_2133918316798641961[20] = 0;
   out_2133918316798641961[21] = 0;
   out_2133918316798641961[22] = 0;
   out_2133918316798641961[23] = 0;
   out_2133918316798641961[24] = 0;
   out_2133918316798641961[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2133918316798641961[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2133918316798641961[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2133918316798641961[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2133918316798641961[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2133918316798641961[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2133918316798641961[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2133918316798641961[32] = 0;
   out_2133918316798641961[33] = 0;
   out_2133918316798641961[34] = 0;
   out_2133918316798641961[35] = 0;
   out_2133918316798641961[36] = 0;
   out_2133918316798641961[37] = 0;
   out_2133918316798641961[38] = 0;
   out_2133918316798641961[39] = 0;
   out_2133918316798641961[40] = 0;
   out_2133918316798641961[41] = 0;
   out_2133918316798641961[42] = 0;
   out_2133918316798641961[43] = 0;
   out_2133918316798641961[44] = 0;
   out_2133918316798641961[45] = 0;
   out_2133918316798641961[46] = 0;
   out_2133918316798641961[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2133918316798641961[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2133918316798641961[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2133918316798641961[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2133918316798641961[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2133918316798641961[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2133918316798641961[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2133918316798641961[54] = 0;
   out_2133918316798641961[55] = 0;
   out_2133918316798641961[56] = 0;
   out_2133918316798641961[57] = 0;
   out_2133918316798641961[58] = 0;
   out_2133918316798641961[59] = 0;
   out_2133918316798641961[60] = 0;
   out_2133918316798641961[61] = 0;
   out_2133918316798641961[62] = 0;
   out_2133918316798641961[63] = 0;
   out_2133918316798641961[64] = 0;
   out_2133918316798641961[65] = 0;
}
void h_14(double *state, double *unused, double *out_7982815944968852205) {
   out_7982815944968852205[0] = state[10];
   out_7982815944968852205[1] = state[11];
   out_7982815944968852205[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6727365400265559688) {
   out_6727365400265559688[0] = 0;
   out_6727365400265559688[1] = 0;
   out_6727365400265559688[2] = 0;
   out_6727365400265559688[3] = 0;
   out_6727365400265559688[4] = 0;
   out_6727365400265559688[5] = 0;
   out_6727365400265559688[6] = 0;
   out_6727365400265559688[7] = 0;
   out_6727365400265559688[8] = 0;
   out_6727365400265559688[9] = 0;
   out_6727365400265559688[10] = 1;
   out_6727365400265559688[11] = 0;
   out_6727365400265559688[12] = 0;
   out_6727365400265559688[13] = 0;
   out_6727365400265559688[14] = 0;
   out_6727365400265559688[15] = 0;
   out_6727365400265559688[16] = 0;
   out_6727365400265559688[17] = 0;
   out_6727365400265559688[18] = 0;
   out_6727365400265559688[19] = 0;
   out_6727365400265559688[20] = 0;
   out_6727365400265559688[21] = 0;
   out_6727365400265559688[22] = 0;
   out_6727365400265559688[23] = 0;
   out_6727365400265559688[24] = 0;
   out_6727365400265559688[25] = 0;
   out_6727365400265559688[26] = 0;
   out_6727365400265559688[27] = 0;
   out_6727365400265559688[28] = 0;
   out_6727365400265559688[29] = 0;
   out_6727365400265559688[30] = 0;
   out_6727365400265559688[31] = 0;
   out_6727365400265559688[32] = 0;
   out_6727365400265559688[33] = 1;
   out_6727365400265559688[34] = 0;
   out_6727365400265559688[35] = 0;
   out_6727365400265559688[36] = 0;
   out_6727365400265559688[37] = 0;
   out_6727365400265559688[38] = 0;
   out_6727365400265559688[39] = 0;
   out_6727365400265559688[40] = 0;
   out_6727365400265559688[41] = 0;
   out_6727365400265559688[42] = 0;
   out_6727365400265559688[43] = 0;
   out_6727365400265559688[44] = 0;
   out_6727365400265559688[45] = 0;
   out_6727365400265559688[46] = 0;
   out_6727365400265559688[47] = 0;
   out_6727365400265559688[48] = 0;
   out_6727365400265559688[49] = 0;
   out_6727365400265559688[50] = 0;
   out_6727365400265559688[51] = 0;
   out_6727365400265559688[52] = 0;
   out_6727365400265559688[53] = 0;
   out_6727365400265559688[54] = 0;
   out_6727365400265559688[55] = 0;
   out_6727365400265559688[56] = 1;
   out_6727365400265559688[57] = 0;
   out_6727365400265559688[58] = 0;
   out_6727365400265559688[59] = 0;
   out_6727365400265559688[60] = 0;
   out_6727365400265559688[61] = 0;
   out_6727365400265559688[62] = 0;
   out_6727365400265559688[63] = 0;
   out_6727365400265559688[64] = 0;
   out_6727365400265559688[65] = 0;
}
void h_33(double *state, double *unused, double *out_2365850921752563680) {
   out_2365850921752563680[0] = state[16];
   out_2365850921752563680[1] = state[17];
   out_2365850921752563680[2] = state[18];
}
void H_33(double *state, double *unused, double *out_451335984883685353) {
   out_451335984883685353[0] = 0;
   out_451335984883685353[1] = 0;
   out_451335984883685353[2] = 0;
   out_451335984883685353[3] = 0;
   out_451335984883685353[4] = 0;
   out_451335984883685353[5] = 0;
   out_451335984883685353[6] = 0;
   out_451335984883685353[7] = 0;
   out_451335984883685353[8] = 0;
   out_451335984883685353[9] = 0;
   out_451335984883685353[10] = 0;
   out_451335984883685353[11] = 0;
   out_451335984883685353[12] = 0;
   out_451335984883685353[13] = 0;
   out_451335984883685353[14] = 0;
   out_451335984883685353[15] = 0;
   out_451335984883685353[16] = 1;
   out_451335984883685353[17] = 0;
   out_451335984883685353[18] = 0;
   out_451335984883685353[19] = 0;
   out_451335984883685353[20] = 0;
   out_451335984883685353[21] = 0;
   out_451335984883685353[22] = 0;
   out_451335984883685353[23] = 0;
   out_451335984883685353[24] = 0;
   out_451335984883685353[25] = 0;
   out_451335984883685353[26] = 0;
   out_451335984883685353[27] = 0;
   out_451335984883685353[28] = 0;
   out_451335984883685353[29] = 0;
   out_451335984883685353[30] = 0;
   out_451335984883685353[31] = 0;
   out_451335984883685353[32] = 0;
   out_451335984883685353[33] = 0;
   out_451335984883685353[34] = 0;
   out_451335984883685353[35] = 0;
   out_451335984883685353[36] = 0;
   out_451335984883685353[37] = 0;
   out_451335984883685353[38] = 0;
   out_451335984883685353[39] = 1;
   out_451335984883685353[40] = 0;
   out_451335984883685353[41] = 0;
   out_451335984883685353[42] = 0;
   out_451335984883685353[43] = 0;
   out_451335984883685353[44] = 0;
   out_451335984883685353[45] = 0;
   out_451335984883685353[46] = 0;
   out_451335984883685353[47] = 0;
   out_451335984883685353[48] = 0;
   out_451335984883685353[49] = 0;
   out_451335984883685353[50] = 0;
   out_451335984883685353[51] = 0;
   out_451335984883685353[52] = 0;
   out_451335984883685353[53] = 0;
   out_451335984883685353[54] = 0;
   out_451335984883685353[55] = 0;
   out_451335984883685353[56] = 0;
   out_451335984883685353[57] = 0;
   out_451335984883685353[58] = 0;
   out_451335984883685353[59] = 0;
   out_451335984883685353[60] = 0;
   out_451335984883685353[61] = 0;
   out_451335984883685353[62] = 1;
   out_451335984883685353[63] = 0;
   out_451335984883685353[64] = 0;
   out_451335984883685353[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7459114665916083270) {
  H(in_vec, out_7459114665916083270);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7132705503742969874) {
  err_fun(nom_x, delta_x, out_7132705503742969874);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5508521473895153696) {
  inv_err_fun(nom_x, true_x, out_5508521473895153696);
}
void live_H_mod_fun(double *state, double *out_587104994641019900) {
  H_mod_fun(state, out_587104994641019900);
}
void live_f_fun(double *state, double dt, double *out_2978642854143158247) {
  f_fun(state,  dt, out_2978642854143158247);
}
void live_F_fun(double *state, double dt, double *out_388375667706179161) {
  F_fun(state,  dt, out_388375667706179161);
}
void live_h_4(double *state, double *unused, double *out_2316967131109145089) {
  h_4(state, unused, out_2316967131109145089);
}
void live_H_4(double *state, double *unused, double *out_4432159738179544458) {
  H_4(state, unused, out_4432159738179544458);
}
void live_h_9(double *state, double *unused, double *out_7982815944968852205) {
  h_9(state, unused, out_7982815944968852205);
}
void live_H_9(double *state, double *unused, double *out_6727365400265559688) {
  H_9(state, unused, out_6727365400265559688);
}
void live_h_10(double *state, double *unused, double *out_5085672873651168485) {
  h_10(state, unused, out_5085672873651168485);
}
void live_H_10(double *state, double *unused, double *out_3842366662318691362) {
  H_10(state, unused, out_3842366662318691362);
}
void live_h_12(double *state, double *unused, double *out_1420358811908403366) {
  h_12(state, unused, out_1420358811908403366);
}
void live_H_12(double *state, double *unused, double *out_1949098638863188538) {
  H_12(state, unused, out_1949098638863188538);
}
void live_h_35(double *state, double *unused, double *out_891526568328106016) {
  h_35(state, unused, out_891526568328106016);
}
void live_H_35(double *state, double *unused, double *out_3601892989522542957) {
  H_35(state, unused, out_3601892989522542957);
}
void live_h_32(double *state, double *unused, double *out_2623478293943095803) {
  h_32(state, unused, out_2623478293943095803);
}
void live_H_32(double *state, double *unused, double *out_3580122557880242764) {
  H_32(state, unused, out_3580122557880242764);
}
void live_h_13(double *state, double *unused, double *out_2831171244995848302) {
  h_13(state, unused, out_2831171244995848302);
}
void live_H_13(double *state, double *unused, double *out_2133918316798641961) {
  H_13(state, unused, out_2133918316798641961);
}
void live_h_14(double *state, double *unused, double *out_7982815944968852205) {
  h_14(state, unused, out_7982815944968852205);
}
void live_H_14(double *state, double *unused, double *out_6727365400265559688) {
  H_14(state, unused, out_6727365400265559688);
}
void live_h_33(double *state, double *unused, double *out_2365850921752563680) {
  h_33(state, unused, out_2365850921752563680);
}
void live_H_33(double *state, double *unused, double *out_451335984883685353) {
  H_33(state, unused, out_451335984883685353);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
